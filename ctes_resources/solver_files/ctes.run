# CTES Optimization Formulation
# Karl Heine, Colorado School of Mines
# March 18, 2021

#--------------------------------
# Run File
#--------------------------------
# ctes.run

model ctes.mod;
data ctes.dat;

# Begin Run Logging
option log_file 'runlog.out';

# Set Options
option solver gurobi;
option gurobi_options 'mipgapabs=1100 logfile=runlog.out';

option display_round 0;

param e_bill >= 0;
param d_bill >= 0;
param capex >= 0;

# Solve
solve;

let e_bill:= ( sum{t in 1..T} c_e[t] * delta * P[t] );
let d_bill:= ( sum{d in 1..D} c_p[d] * P_hat[d] );
let capex:= ( sum{n in 1..N} k * Z[n] );

option print_round 2;
display annual_cost, Z, sum{n in 1..N} Z[n], e_bill, d_bill, capex > soln.out;
print{t in 1..T}: P[t] > P.out;
print{t in 1..T}: {n in 1..N} PY[n,t] > PY.out;
print{t in 1..T}: {n in 1..N} PX[n,t] > PX.out;
print{t in 1..T}: {n in 1..N} PYfull[n,t] > PYfull.out;
print{t in 1..T}: {n in 1..N} alpha[n,t] > alpha.out;
print{t in 1..T}: {n in 1..N} PYpart[n,t] > PYpart.out;
print{d in 1..D}: P_hat[d] > P_hat.out;
print{t in 1..T}: {n in 1..N} Q[n,t] > Q.out;
print{t in 1..T}: {n in 1..N} X[n,t] > X.out;
print{t in 1..T}: {n in 1..N} Yfull[n,t] > Yfull.out;
print{t in 1..T}: {n in 1..N} sum{s in 1..S} Ypart[n,s,t] > Ypart.out;
print{t in 1..T}: {n in 1..N} l[n,t] + X[n,t] - Yfull[n,t] - sum{s in 1..S} Ypart[n,s,t] > load.out;

option print_round 0;
display annual_cost, Z;

option log_file;
exit;
